{%- extends 'display_priority.j2' -%}
{% from 'celltags.j2' import celltags %}
{% from 'mathjax.html.j2' import mathjax %}

{% block codecell %}
{{ super() }}
{%- endblock codecell %}

{% block input_group -%}
{{ super() }}
{% endblock input_group %}

{% block output_group %}
{{ super() }}
{% endblock output_group %}

{% block in_prompt -%}
{%- endblock in_prompt %}

{% block empty_in_prompt -%}
{%- endblock empty_in_prompt %}

{#
  output_prompt doesn't do anything in HTML,
  because there is a prompt div in each output area (see output block)
#}
{% block output_prompt %}
{% endblock output_prompt %}

{% block input %}
<div class="card">
    <div class="card-header" id="headingThree">
        <h2 class="mb-0">
            <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#code_collapse{{cell.execution_count}}"><i class="fa fa-plus"></i> Show code <i class="icon brands fa-python"></i></button>
        </h2>
    </div>
    <div id="code_collapse{{cell.execution_count}}" class="collapse">
        <div class="card-body">
            <pre style="resize: both;"><code>{{ cell.source | highlight_code(metadata=cell.metadata)}}</code></pre>
        </div>
    </div>
</div>
{%- endblock input %}

{% block output_area_prompt %}{% endblock output_area_prompt %}

{% block output %}
{% if resources.global_content_filter.include_output_prompt %}
    {{ self.output_area_prompt() }}
{% endif %}
{{ super() }}
{% endblock output %}

{% block markdowncell scoped %}
{%- if resources.global_content_filter.include_input_prompt-%}
    {{ self.empty_in_prompt() }}
{%- endif -%}
{{ cell.source  | markdown2html | strip_files_prefix }}
{%- endblock markdowncell %}

{% block unknowncell scoped %}
unknown type  {{ cell.type }}
{% endblock unknowncell %}

{% block execute_result -%}
{%- set extra_class="output_execute_result" -%}
{% block data_priority scoped %}
{{ super() }}
{% endblock data_priority %}
{%- set extra_class="" -%}
{%- endblock execute_result %}

{% block stream_stdout -%}
<pre class="stream_stdout">
{{- output.text | ansi2html -}}
</pre>
{%- endblock stream_stdout %}

{% block stream_stderr -%}
<pre class="stream_stderr">
{{- output.text | ansi2html -}}
</pre>
{%- endblock stream_stderr %}

{% block data_svg scoped -%}
{%- if output.svg_filename %}
<span class="image main"><img src="{{ output.svg_filename | posix_path }}"></span>
{%- else %}
{{ output.data['image/svg+xml'] }}
{%- endif %}
{%- endblock data_svg %}

{% block data_html scoped -%}
<div class="data_html">
{{ output.data['text/html'] | stripcssstyle}}
</div>
{%- endblock data_html %}

{% block data_markdown scoped -%}
{{ output.data['text/markdown'] | markdown2html }}
{%- endblock data_markdown %}

{% block data_png scoped %}
{%- if 'image/png' in output.metadata.get('filenames', {}) %}
<span class="image main"><img src="{{ output.metadata.filenames['image/png'] | posix_path }}"
{%- else %}
<span class="image main"><img src="data:image/png;base64,{{ output.data['image/png'] }}"
{%- endif %}
{%- set width=output | get_metadata('width', 'image/png') -%}
{%- if width is not none %}
width={{ width }}
{%- endif %}
{%- set height=output | get_metadata('height', 'image/png') -%}
{%- if height is not none %}
height={{ height }}
{%- endif %}
{%- if output | get_metadata('unconfined', 'image/png') %}
class="unconfined"
{%- endif %}
{%- set alttext=(output | get_metadata('alt', 'image/png')) or (cell | get_metadata('alt')) -%}
{%- if alttext is not none %}
alt="{{ alttext }}"
{%- endif %}
></span>
{%- endblock data_png %}

{% block data_jpg scoped %}
{%- if 'image/jpeg' in output.metadata.get('filenames', {}) %}
<span class="image main"><img src="{{ output.metadata.filenames['image/jpeg'] | posix_path }}"
{%- else %}
<span class="image main"><img src="data:image/jpeg;base64,{{ output.data['image/jpeg'] }}"
{%- endif %}
{%- set width=output | get_metadata('width', 'image/jpeg') -%}
{%- if width is not none %}
width={{ width }}
{%- endif %}
{%- set height=output | get_metadata('height', 'image/jpeg') -%}
{%- if height is not none %}
height={{ height }}
{%- endif %}
{%- if output | get_metadata('unconfined', 'image/jpeg') %}
class="unconfined"
{%- endif %}
{%- set alttext=(output | get_metadata('alt', 'image/jpeg')) or (cell | get_metadata('alt')) -%}
{%- if alttext is not none %}
alt="{{ alttext }}"
{%- endif %}
></span>
{%- endblock data_jpg %}

{% block data_latex scoped %}
{{ output.data['text/latex'] | e }}
{%- endblock data_latex %}

{% block error -%}
<pre class="block_error">
{{- super() -}}
</pre>
{%- endblock error %}

{%- block traceback_line %}
{{ line | ansi2html }}
{%- endblock traceback_line %}

{%- block data_text scoped %}
<pre class="data_text">
{{- output.data['text/plain'] | ansi2html -}}
</pre>
{%- endblock -%}

{%- block data_javascript scoped %}
{% set div_id = uuid4() %}
<div id="{{ div_id }}">
<script type="text/javascript">
var element = $('#{{ div_id }}');
{{ output.data['application/javascript'] }}
</script>
{%- endblock -%}

{%- block data_widget_state scoped %}
{% set div_id = uuid4() %}
{% set datatype_list = output.data | filter_data_type %}
{% set datatype = datatype_list[0]%}
<div id="{{ div_id }}">
<script type="text/javascript">
var element = $('#{{ div_id }}');
</script>
<script type="{{ datatype }}">
{{ output.data[datatype] | json_dumps }}
</script>
</div>
{%- endblock data_widget_state -%}

{%- block data_widget_view scoped %}
{% set div_id = uuid4() %}
{% set datatype_list = output.data | filter_data_type %}
{% set datatype = datatype_list[0]%}
<div id="{{ div_id }}">
<script type="text/javascript">
var element = $('#{{ div_id }}');
</script>
<script type="{{ datatype }}">
{{ output.data[datatype] | json_dumps }}
</script>
</div>
{%- endblock data_widget_view -%}

{%- block footer %}
{% set mimetype = 'application/vnd.jupyter.widget-state+json'%}
{% if mimetype in nb.metadata.get("widgets",{})%}
<script type="{{ mimetype }}">
{{ nb.metadata.widgets[mimetype] | json_dumps }}
</script>
{% endif %}
{{ mathjax() }}
{{ super() }}
{%- endblock footer-%}

{%- block any_cell scoped -%}
{{ super() }}
<hr class="major" />
{%- endblock any_cell -%}
